/*
 * This file configures the actual build steps for the automatic grading.
 *
 */

dockerImage = 'cache-hub.ise-i.ostfalia.de/rechnerstrukturen/rst_aef:1.0'
dockerFlags = '--cpus "2" --memory "2g" --memory-swap "2g" --pids-limit "1000" --network "none"'

/**
 * Main function called by Jenkins.
 */
void testRunner() {
    docker.image(dockerImage).inside(dockerFlags) { c ->
        runTestSteps()
    }
}

private void runTestSteps() {
    test()
}

/**
 * Run tests
 */
private void test() {
    stage('Build') {
        sh '''
            python3 -m RSTemulator -asm testfiles/main.s --test-file testcases/example.py
        '''
    }
}

/**
 * Script of the post build tasks aggregating all JUnit files in $WORKSPACE/results.
 *
 * Called by Jenkins.
 */
void postBuildTasks() {
    sh '''
    rm -rf results
    mkdir results
    cp result.xml $WORKSPACE/results/ || true
    sed -i 's/[^[:print:]\t]/ï¿½/g' $WORKSPACE/results/*.xml || true
    '''
}

// very important, do not remove
// required so that Jenkins finds the methods defined in this script
return this
